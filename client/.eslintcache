[{"D:\\Projects\\Personal Projects\\fe-assignment\\client\\src\\index.tsx":"1","D:\\Projects\\Personal Projects\\fe-assignment\\client\\src\\App.tsx":"2","D:\\Projects\\Personal Projects\\fe-assignment\\client\\src\\reportWebVitals.ts":"3","D:\\Projects\\Personal Projects\\fe-assignment\\client\\src\\components\\Countries.tsx":"4","D:\\Projects\\Personal Projects\\fe-assignment\\client\\src\\components\\Country.tsx":"5","D:\\Projects\\Personal Projects\\fe-assignment\\client\\src\\apiRequest.ts":"6","D:\\Projects\\Personal Projects\\fe-assignment\\client\\src\\components\\CountryStats.tsx":"7","D:\\Projects\\Personal Projects\\fe-assignment\\client\\src\\components\\StatsCard.tsx":"8","D:\\Projects\\Personal Projects\\fe-assignment\\client\\src\\components\\Header.tsx":"9","D:\\Projects\\Personal Projects\\fe-assignment\\client\\src\\context\\reducer.ts":"10"},{"size":636,"mtime":1607335973628,"results":"11","hashOfConfig":"12"},{"size":2750,"mtime":1607342426709,"results":"13","hashOfConfig":"12"},{"size":440,"mtime":1607074788790,"results":"14","hashOfConfig":"12"},{"size":3525,"mtime":1607343785924,"results":"15","hashOfConfig":"12"},{"size":3240,"mtime":1607344142230,"results":"16","hashOfConfig":"12"},{"size":174,"mtime":1607075045005,"results":"17","hashOfConfig":"12"},{"size":1791,"mtime":1607341617970,"results":"18","hashOfConfig":"12"},{"size":1688,"mtime":1607338314080,"results":"19","hashOfConfig":"12"},{"size":567,"mtime":1607343616908,"results":"20","hashOfConfig":"12"},{"size":1224,"mtime":1607341582743,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"gaygn9",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\Projects\\Personal Projects\\fe-assignment\\client\\src\\index.tsx",[],["46","47"],"D:\\Projects\\Personal Projects\\fe-assignment\\client\\src\\App.tsx",["48"],"// Global imports\nimport { createContext, Dispatch, useReducer } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Axios from \"axios\";\n\n// Local imports\nimport reducer from \"./context/reducer\";\nimport Countries from \"./components/Countries\";\nimport Country from \"./components/Country\";\nimport { Button, Input, Spin } from \"antd\";\nimport Header from \"./components/Header\";\nimport { ActionType, StateType } from \"./types\";\n\nconst __initialState = {\n  summary: {\n    data: {\n      Message: \"\",\n      Global: {\n        NewConfirmed: 0,\n        TotalConfirmed: 0,\n        NewDeaths: 0,\n        TotalDeaths: 0,\n        NewRecovered: 0,\n        TotalRecovered: 0,\n      },\n      Countries: [\n        {\n          Country: \"\",\n          CountryCode: \"\",\n          Slug: \"\",\n          NewConfirmed: 0,\n          TotalConfirmed: 0,\n          NewDeaths: 0,\n          TotalDeaths: 0,\n          NewRecovered: 0,\n          TotalRecovered: 0,\n          Date: \"\",\n          Premium: {},\n        },\n      ],\n      Date: \"\",\n    },\n    loading: false,\n    error: \"\",\n  },\n  country: {\n    data: [],\n    loading: false,\n    error: \"\",\n  },\n};\n\nconst apiURL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\n\nexport const StateContext = createContext<{\n  state: StateType;\n  dispatch: Dispatch<ActionType>;\n}>({\n  state: __initialState,\n  dispatch: () => ({}),\n});\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, __initialState);\n\n  const fetchSummaryData = async () => {\n    dispatch({ type: \"FETCH_SUMMARY_START\" });\n\n    try {\n      const summaryResponse = await Axios.get(apiURL + \"/summary\");\n      dispatch({\n        type: \"FETCH_SUMMARY_SUCCESS\",\n        payload: summaryResponse.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: \"FETCH_SUMMARY_ERROR\",\n        payload: error.response.data.errorMessage,\n      });\n    }\n  };\n\n  return (\n    <StateContext.Provider value={{ state, dispatch }}>\n      <div style={{ height: \"100%\", width: 900, margin: \"0 auto\" }}>\n        <Route path=\"/\" component={Header} />\n        <Route path=\"/\" exact>\n          {state.summary.data.Date ? (\n            <Countries />\n          ) : (\n            <div className=\"centered\">\n              {state.summary.loading ? (\n                <Spin size=\"large\" />\n              ) : (\n                <Button\n                  type=\"primary\"\n                  block\n                  onClick={fetchSummaryData}\n                  disabled={state.summary.loading}\n                >\n                  Fetch Data\n                </Button>\n              )}\n            </div>\n          )}\n        </Route>\n        <Route path=\"/country/:slug\" component={Country} />\n      </div>\n    </StateContext.Provider>\n  );\n}\n\nexport default App;\n","D:\\Projects\\Personal Projects\\fe-assignment\\client\\src\\reportWebVitals.ts",[],"D:\\Projects\\Personal Projects\\fe-assignment\\client\\src\\components\\Countries.tsx",[],"D:\\Projects\\Personal Projects\\fe-assignment\\client\\src\\components\\Country.tsx",["49"],"// Global imports\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { AxiosResponse } from \"axios\";\r\n\r\n// Local imports\r\nimport CountryStats from \"./CountryStats\";\r\nimport apiRequest from \"../apiRequest\";\r\n\r\n// Type imports\r\nimport { ApexOptions, CountryData } from \"../types\";\r\nimport { Spin } from \"antd\";\r\nimport { StateContext } from \"../App\";\r\n\r\nconst apiURL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\r\n\r\nconst lineChartOptions: ApexOptions = {\r\n  chart: { type: \"line\" },\r\n  title: {\r\n    text: \"\",\r\n  },\r\n  colors: [\"#103ac2\", \"#0ca30a\", \"#e3ad19\", \"#de2f40\"],\r\n  labels: [],\r\n  stroke: {\r\n    width: 2,\r\n  },\r\n  yaxis: {\r\n    labels: {\r\n      formatter: (val: number) => val.toLocaleString(),\r\n    },\r\n  },\r\n  xaxis: {\r\n    labels: {\r\n      formatter: (val: string) => new Date(val).toLocaleDateString(),\r\n    },\r\n    tickAmount: 20,\r\n  },\r\n  series: [],\r\n};\r\n\r\nconst Country = () => {\r\n  const { state, dispatch } = useContext(StateContext);\r\n\r\n  console.log(state.country);\r\n\r\n  const [country, setCountry] = useState<string>(\"\");\r\n  const [options, setOptions] = useState<ApexOptions>(lineChartOptions);\r\n  const { params } = useRouteMatch<{ slug: string }>();\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: \"FETCH_COUNTRY_START\" });\r\n\r\n    apiRequest(apiURL + \"/country/\" + params.slug)\r\n      .then((res: AxiosResponse<Array<CountryData>>) => {\r\n        setCountry(res.data[0].Country);\r\n        dispatch({ type: \"FETCH_COUNTRY_SUCCESS\", payload: res.data });\r\n        setOptions((options) => ({\r\n          ...options,\r\n          labels: res.data.map((dayData) => dayData.Date),\r\n          series: [\r\n            {\r\n              name: \"Confirmed\",\r\n              data: res.data.map((day) => Number(day.Confirmed)),\r\n            },\r\n            {\r\n              name: \"Recovered\",\r\n              data: res.data.map((day) => Number(day.Recovered)),\r\n            },\r\n            {\r\n              name: \"Active\",\r\n              data: res.data.map((day) => Number(day.Active)),\r\n            },\r\n            {\r\n              name: \"Deaths\",\r\n              data: res.data.map((day) => Number(day.Deaths)),\r\n            },\r\n          ],\r\n        }));\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: \"FETCH_COUNTRY_ERROR\",\r\n          payload: error.data.response.errorMessage,\r\n        });\r\n      });\r\n  }, [params.slug]);\r\n\r\n  if (options.series.length === 0) {\r\n    return (\r\n      <div className=\"centered\">\r\n        <Spin size=\"large\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>{country}</h1>\r\n      <p>You are viewing the COVID-19 statistics of {country}.</p>\r\n      <CountryStats stats={options.series} />\r\n      <h2>Daily Change Over Time</h2>\r\n      <p>\r\n        In this section, you can view the daily <i>confirmed</i>,{\" \"}\r\n        <i>recovered</i>, <i>active</i>, and <i>death</i> cases since the first\r\n        recorded case. If you hover over a specific date, you can see more\r\n        detailed numbers for each case type.\r\n      </p>\r\n      <Chart options={options} series={options.series} height=\"500\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Country;\r\n","D:\\Projects\\Personal Projects\\fe-assignment\\client\\src\\apiRequest.ts",[],"D:\\Projects\\Personal Projects\\fe-assignment\\client\\src\\components\\CountryStats.tsx",[],"D:\\Projects\\Personal Projects\\fe-assignment\\client\\src\\components\\StatsCard.tsx",[],["50","51"],"D:\\Projects\\Personal Projects\\fe-assignment\\client\\src\\components\\Header.tsx",[],"D:\\Projects\\Personal Projects\\fe-assignment\\client\\src\\context\\reducer.ts",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":10,"column":18,"nodeType":"58","messageId":"59","endLine":10,"endColumn":23},{"ruleId":"60","severity":1,"message":"61","line":87,"column":6,"nodeType":"62","endLine":87,"endColumn":19,"suggestions":"63"},{"ruleId":"52","replacedBy":"64"},{"ruleId":"54","replacedBy":"65"},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"@typescript-eslint/no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["68"],["66"],["67"],"no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},"Update the dependencies array to be: [dispatch, params.slug]",{"range":"71","text":"72"},[2459,2472],"[dispatch, params.slug]"]